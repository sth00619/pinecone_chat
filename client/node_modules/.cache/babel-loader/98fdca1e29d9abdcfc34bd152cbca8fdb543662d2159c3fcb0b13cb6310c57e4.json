{"ast":null,"code":"// client/src/utils/swaggerHelper.js\nexport const showSwaggerToken = () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    console.log('%c❌ 토큰이 없습니다. 먼저 로그인하세요.', 'color: #e74c3c; font-weight: bold;');\n    return;\n  }\n\n  // 스타일이 적용된 콘솔 출력\n  console.log('%c🔐 SWAGGER AUTHORIZATION HELPER', 'color: #3498db; font-size: 20px; font-weight: bold;');\n  console.log('%c=====================================', 'color: #95a5a6;');\n\n  // Bearer 토큰 (Swagger의 Authorize 버튼에 직접 붙여넣기)\n  console.log('%c1️⃣ Swagger Authorize에 붙여넣기:', 'color: #2ecc71; font-size: 14px; font-weight: bold;');\n  console.log('%cBearer ' + token, 'color: #e74c3c; background: #ecf0f1; padding: 8px; font-family: monospace; font-size: 12px;');\n\n  // 토큰만 (일부 API 테스트 도구용)\n  console.log('\\n%c2️⃣ 토큰만 필요한 경우:', 'color: #2ecc71; font-size: 14px; font-weight: bold;');\n  console.log('%c' + token, 'color: #e74c3c; background: #ecf0f1; padding: 8px; font-family: monospace; font-size: 12px;');\n\n  // 사용 방법 안내\n  console.log('\\n%c📋 사용 방법:', 'color: #f39c12; font-size: 14px; font-weight: bold;');\n  console.log('%c1. Swagger UI (http://localhost:3000/api-docs)에서 \"Authorize\" 버튼 클릭', 'color: #34495e;');\n  console.log('%c2. 위의 \"Bearer {token}\" 전체를 복사하여 입력', 'color: #34495e;');\n  console.log('%c3. \"Authorize\" 클릭 후 \"Close\"', 'color: #34495e;');\n\n  // 토큰 정보\n  console.log('\\n%cℹ️ 토큰 정보:', 'color: #3498db; font-size: 14px; font-weight: bold;');\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    console.log('%c사용자 ID: ' + payload.userId, 'color: #7f8c8d;');\n    console.log('%c이메일: ' + payload.email, 'color: #7f8c8d;');\n    console.log('%c만료 시간: ' + new Date(payload.exp * 1000).toLocaleString(), 'color: #7f8c8d;');\n  } catch (e) {\n    console.log('%c토큰 파싱 실패', 'color: #e74c3c;');\n  }\n  console.log('%c=====================================', 'color: #95a5a6;');\n};\n\n// 전역으로 사용할 수 있도록 window 객체에 추가\nif (typeof window !== 'undefined') {\n  window.showSwaggerToken = showSwaggerToken;\n  window.swaggerToken = showSwaggerToken; // 짧은 별칭\n}","map":{"version":3,"names":["showSwaggerToken","token","localStorage","getItem","console","log","payload","JSON","parse","atob","split","userId","email","Date","exp","toLocaleString","e","window","swaggerToken"],"sources":["/Users/songtaeho/Documents/GitHub/pinecone_chat/client/src/utils/swaggerHelper.js"],"sourcesContent":["// client/src/utils/swaggerHelper.js\nexport const showSwaggerToken = () => {\n    const token = localStorage.getItem('token');\n    \n    if (!token) {\n      console.log('%c❌ 토큰이 없습니다. 먼저 로그인하세요.', 'color: #e74c3c; font-weight: bold;');\n      return;\n    }\n    \n    // 스타일이 적용된 콘솔 출력\n    console.log('%c🔐 SWAGGER AUTHORIZATION HELPER', 'color: #3498db; font-size: 20px; font-weight: bold;');\n    console.log('%c=====================================', 'color: #95a5a6;');\n    \n    // Bearer 토큰 (Swagger의 Authorize 버튼에 직접 붙여넣기)\n    console.log('%c1️⃣ Swagger Authorize에 붙여넣기:', 'color: #2ecc71; font-size: 14px; font-weight: bold;');\n    console.log('%cBearer ' + token, 'color: #e74c3c; background: #ecf0f1; padding: 8px; font-family: monospace; font-size: 12px;');\n    \n    // 토큰만 (일부 API 테스트 도구용)\n    console.log('\\n%c2️⃣ 토큰만 필요한 경우:', 'color: #2ecc71; font-size: 14px; font-weight: bold;');\n    console.log('%c' + token, 'color: #e74c3c; background: #ecf0f1; padding: 8px; font-family: monospace; font-size: 12px;');\n    \n    // 사용 방법 안내\n    console.log('\\n%c📋 사용 방법:', 'color: #f39c12; font-size: 14px; font-weight: bold;');\n    console.log('%c1. Swagger UI (http://localhost:3000/api-docs)에서 \"Authorize\" 버튼 클릭', 'color: #34495e;');\n    console.log('%c2. 위의 \"Bearer {token}\" 전체를 복사하여 입력', 'color: #34495e;');\n    console.log('%c3. \"Authorize\" 클릭 후 \"Close\"', 'color: #34495e;');\n    \n    // 토큰 정보\n    console.log('\\n%cℹ️ 토큰 정보:', 'color: #3498db; font-size: 14px; font-weight: bold;');\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      console.log('%c사용자 ID: ' + payload.userId, 'color: #7f8c8d;');\n      console.log('%c이메일: ' + payload.email, 'color: #7f8c8d;');\n      console.log('%c만료 시간: ' + new Date(payload.exp * 1000).toLocaleString(), 'color: #7f8c8d;');\n    } catch (e) {\n      console.log('%c토큰 파싱 실패', 'color: #e74c3c;');\n    }\n    \n    console.log('%c=====================================', 'color: #95a5a6;');\n  };\n  \n  // 전역으로 사용할 수 있도록 window 객체에 추가\n  if (typeof window !== 'undefined') {\n    window.showSwaggerToken = showSwaggerToken;\n    window.swaggerToken = showSwaggerToken; // 짧은 별칭\n  }"],"mappings":"AAAA;AACA,OAAO,MAAMA,gBAAgB,GAAGA,CAAA,KAAM;EAClC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACF,KAAK,EAAE;IACVG,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE,oCAAoC,CAAC;IAC7E;EACF;;EAEA;EACAD,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE,qDAAqD,CAAC;EACvGD,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAE,iBAAiB,CAAC;;EAEzE;EACAD,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE,qDAAqD,CAAC;EACpGD,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGJ,KAAK,EAAE,6FAA6F,CAAC;;EAE/H;EACAG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,qDAAqD,CAAC;EACzFD,OAAO,CAACC,GAAG,CAAC,IAAI,GAAGJ,KAAK,EAAE,6FAA6F,CAAC;;EAExH;EACAG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,qDAAqD,CAAC;EACnFD,OAAO,CAACC,GAAG,CAAC,sEAAsE,EAAE,iBAAiB,CAAC;EACtGD,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAE,iBAAiB,CAAC;EACtED,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE,iBAAiB,CAAC;;EAE/D;EACAD,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,qDAAqD,CAAC;EACnF,IAAI;IACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACR,KAAK,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrDN,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGC,OAAO,CAACK,MAAM,EAAE,iBAAiB,CAAC;IAC7DP,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,OAAO,CAACM,KAAK,EAAE,iBAAiB,CAAC;IACzDR,OAAO,CAACC,GAAG,CAAC,WAAW,GAAG,IAAIQ,IAAI,CAACP,OAAO,CAACQ,GAAG,GAAG,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC,EAAE,iBAAiB,CAAC;EAC7F,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVZ,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,iBAAiB,CAAC;EAC9C;EAEAD,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAE,iBAAiB,CAAC;AAC3E,CAAC;;AAED;AACA,IAAI,OAAOY,MAAM,KAAK,WAAW,EAAE;EACjCA,MAAM,CAACjB,gBAAgB,GAAGA,gBAAgB;EAC1CiB,MAAM,CAACC,YAAY,GAAGlB,gBAAgB,CAAC,CAAC;AAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}